---
const aptabase_key = import.meta.env.PUBLIC_APTABASE_KEY;
---

<script is:inline type="module" define:vars={{ aptabase_key }}>
	/**
	 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
	 * Original file: /npm/@aptabase/web@0.4.3/dist/index.js
	 *
	 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
	 */
	var e,t,a=typeof window<"u"&&typeof window.fetch<"u",n=typeof chrome<"u"&&!!chrome.runtime?.id,o=r(),i=new Date,s={US:"https://us.aptabase.com",EU:"https://eu.aptabase.com",DEV:"http://localhost:3000",SH:""};function r(){return Math.floor(Date.now()/1e3).toString()+Math.floor(1e8*Math.random()).toString().padStart(8,"0")}function l(){return e||(typeof navigator>"u"?void 0:e=navigator.languages.length>0?navigator.languages[0]:navigator.language)}var p,c,d="";function u(e,t){(function(e){let t=e.split("-");return 3===t.length&&void 0!==s[t[1]]||(console.warn(`The Aptabase App Key "${e}" is invalid. Tracking will be disabled.`),!1)})(e)&&(p=t?.apiUrl??function(e,t){let a=e.split("-")[1];return"SH"===a?t?.host?`${t.host}/api/v0/event`:void console.warn("Host parameter must be defined when using Self-Hosted App Key. Tracking will be disabled."):`${t?.host??s[a]}/api/v0/event`}(e,t),d=e,c=t)}async function v(e,s){if(!p)return;let u=function(e){let t=new Date,a=t.getTime()-i.getTime();return Math.floor(a/1e3)>e&&(o=r()),i=t,o}(3600);await async function(e){if(a||n)if(e.appKey)try{let a=await fetch(e.apiUrl,{method:"POST",headers:{"Content-Type":"application/json","App-Key":e.appKey},credentials:"omit",body:JSON.stringify({timestamp:(new Date).toISOString(),sessionId:e.sessionId,eventName:e.eventName,systemProps:{locale:e.locale??l(),isDebug:e.isDebug??(void 0!==t?t:typeof location>"u"?(t=!1,t):(t="localhost"===location.hostname,t)),appVersion:e.appVersion??"",sdkVersion:e.sdkVersion},props:e.props})});if(a.status>=300){let t=await a.text();console.warn(`Failed to send event "${e.eventName}": ${a.status} ${t}`)}}catch(t){console.warn(`Failed to send event "${e.eventName}"`),console.warn(t)}else console.warn(`Aptabase: init must be called before trackEvent. Event "${e.eventName}" will be discarded.`);else console.warn(`Aptabase: trackEvent requires a browser environment. Event "${e.eventName}" will be discarded.`)}({apiUrl:p,sessionId:u,appKey:d,isDebug:c?.isDebug,appVersion:c?.appVersion,sdkVersion:"aptabase-web@0.4.3",eventName:e,props:s})}

	const init = (key) => u(key);
	const trackEvent = (event, props) => v(event, props);

	init(aptabase_key);

	trackEvent('visit', {
		path: location.pathname
	})
</script>
